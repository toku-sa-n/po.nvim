name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  luacheck:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Run LuaCheck
        uses: lunarmodules/luacheck@cc089e3f65acdd1ef8716cc73a3eca24a6b845e4 # v1.2.0

  luals:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Download Lua Language Server
        run: git clone https://github.com/LuaLS/lua-laguage-server $HOME/lua-language-server

      - name: Run Lua Language Server
        run: |
          if [[ \
          $($HOME/lua-language-server/bin/lua-language-server --check . --checklevel Hint --logpath .) \
          != \
          "Diagnosis completed, no problems found" \
          ]]
          then
            cat check.json | jq
            exit 1
          fi

  msgfmt:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Install gettext
        run: sudo apt-get install -y gettext

      - name: Run msgfmt
        run: |
          shopt -s globstar
          msgfmt --check --output-file=/dev/null **/*.po

  prettier:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Run Prettier
        run: npx --yes prettier --check .

  stylua:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Run Stylua
        uses: JohnnyMorganz/stylua-action@b6661824b86c9c33121bed87a778b660ba90cf77 # v4.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: 0.20.0
          args: --check .

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    strategy:
      matrix:
        neovim: [v0.10.1, v0.10.2]

    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

        # Appimage requires libfuse2.
      - name: Install gettext and libfuse2
        run: sudo apt-get install -y gettext libfuse2

        # We download Neovim from the GitHub releases page as the version in
        # the Ubuntu repositories is outdated.
      - name: Download Neovim
        run: |
          wget https://github.com/neovim/neovim/releases/download/${{ matrix.neovim }}/nvim.appimage -O $HOME/nvim.appimage
          chmod +x $HOME/nvim.appimage

      - name: Clone Plenary
        run: git clone https://github.com/nvim-lua/plenary.nvim $HOME/plenary.nvim

      - name: Create `init.vim`
        run: |
          mkdir -p $HOME/.config/nvim
          printf "lua vim.opt.rtp:append('$HOME/plenary.nvim') \n \
                  source $HOME/plenary.nvim/plugin/plenary.vim" > $HOME/.config/nvim/init.vim

      - name: Run tests
        run: $HOME/nvim.appimage --headless -c "PlenaryBustedDirectory test/"
